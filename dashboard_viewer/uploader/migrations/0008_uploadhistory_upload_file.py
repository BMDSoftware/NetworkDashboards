# Generated by Django 2.2.16 on 2020-12-12 11:58
import logging
import os

import uploader.models
from django.conf import settings
from django.db import migrations, models

logger = logging.getLogger(__name__)


class UnregisteredUploadFiles(TypeError):
    def __init__(self, datasource):
        self.message = f"Datasource {datasource} has unregistered upload files on its upload storage path"


def insert_upload_file(apps, _):
    UploadHistory = apps.get_model("uploader", "UploadHistory")
    DataSource = apps.get_model("uploader", "DataSource")

    storage_path = os.path.join(
        settings.BASE_DIR,
        "achilles_results_files",
    )
    for datasource in DataSource.objects.all():
        data_source_storage_path = os.path.join(
            storage_path,
            datasource.acronym,
        )
        uploaded_files = os.listdir(data_source_storage_path)
        uploaded_files.sort(reverse=True)

        objects = list(UploadHistory.objects.filter(data_source=datasource))

        if len(uploaded_files) != len(objects):
            raise UnregisteredUploadFiles(datasource.acronym)

        for i in range(len(uploaded_files)):
            upload = objects[i]
            filename_on_table = uploader.models.upload_file_path(
                upload, uploaded_files[i]
            )

            os.rename(
                os.path.join(data_source_storage_path, uploaded_files[i]),
                os.path.join(
                    settings.MEDIA_ROOT,
                    filename_on_table,
                ),
            )

            upload.upload_file = filename_on_table
            upload.save()

        os.rmdir(data_source_storage_path)

    if os.listdir(storage_path):
        logger.warning(
            "There are unregistered datasources that have upload files stored"
        )
    else:
        os.rmdir(storage_path)


class Migration(migrations.Migration):

    dependencies = [
        ("uploader", "0007_auto_20201212_2012"),
    ]

    operations = [
        migrations.AddField(
            model_name="uploadhistory",
            name="upload_file",
            field=models.FileField(
                default=None,
                upload_to=uploader.models.upload_file_path,
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.RunPython(insert_upload_file),
        migrations.AlterField(
            model_name="uploadhistory",
            name="upload_file",
            field=models.FileField(
                default=None, upload_to=uploader.models.upload_file_path
            ),
            preserve_default=False,
        ),
    ]
