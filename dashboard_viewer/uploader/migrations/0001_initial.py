# Generated by Django 2.2.7 on 2020-02-07 15:10

from django.db import migrations, models
import django.db.models.deletion
import requests


def insert_cities_data(apps, schema_editor):
    Country = apps.get_model("uploader", "Country")
    Continent = apps.get_model("uploader", "Continent")

    continent_mapping = {
        "EU": "Europe",
        "NA": "North America",
        "SA": "South America",
        "AS": "Asia",
        "OC": "Oceania",
        "AF": "Africa",
        "AN": "Antarctica"
    }

    for code, name in continent_mapping.items():
        continent = Continent(iso=code, continent=name)
        continent.save()
        continent_mapping[code] = continent

    country_info_url = "http://download.geonames.org/export/dump/countryInfo.txt"
    req = requests.get(country_info_url)
    if req.status_code != 200:
        raise RuntimeError("Unable to fetch countryInfo data from geoname")

    for line in req.text.split("\n"):
        if line.startswith("#"):
            continue

        content = line.split("\t")

        if len(content) < 9:
            continue

        iso = content[0]
        iso3 = content[1]
        country = content[4]
        continent = content[8]
        continent = continent_mapping[continent]

        Country(iso=iso, iso3=iso3, country=country, continent=continent).save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(help_text='ISO code.', max_length=2)),
                ('continent', models.CharField(help_text='Continent name.', max_length=40)),
            ],
            options={
                'db_table': 'continent',
                'ordering': ('continent',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(help_text='Alpha 2 ISO code.', max_length=2)),
                ('iso3', models.CharField(help_text='Alpha 3 ISO code.', max_length=3)),
                ('country', models.CharField(help_text='Country name.', max_length=50)),
                ('continent', models.ForeignKey(help_text='Continent associated.', on_delete=django.db.models.deletion.CASCADE, to='uploader.Continent')),
            ],
            options={
                'db_table': 'country',
                'ordering': ('country',),
            },
        ),
        migrations.CreateModel(
            name='DatabaseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Name of the type.', max_length=40, unique=True)),
            ],
            options={
                'db_table': 'database_type',
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the data source.', max_length=40, unique=True)),
                ('slug', models.SlugField(help_text='Short label for the data source, containing only letters, numbers, underscores or hyphens.', max_length=10, unique=True)),
                ('release_date', models.DateField(help_text='Date at which DB is available for research for current release.')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('link', models.URLField(help_text='Link to home page of the data source')),
                ('country', models.ForeignKey(help_text='Country where the data source is located.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='uploader.Country')),
                ('database_type', models.ForeignKey(help_text='Type of the data source. You can create a new type.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='uploader.DatabaseType')),
            ],
            options={
                'db_table': 'data_source',
            },
        ),
        migrations.CreateModel(
            name='UploadHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_date', models.DateTimeField()),
                ('achilles_version', models.CharField(max_length=10)),
                ('achilles_generation_date', models.DateField()),
                ('cdm_version', models.CharField(max_length=10)),
                ('vocabulary_version', models.CharField(max_length=10)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uploader.DataSource')),
            ],
            options={
                'db_table': 'upload_history',
                'ordering': ('-upload_date',),
            },
        ),
        migrations.CreateModel(
            name='AchillesResultsArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_id', models.BigIntegerField()),
                ('stratum_1', models.TextField()),
                ('stratum_2', models.TextField()),
                ('stratum_3', models.TextField()),
                ('stratum_4', models.TextField()),
                ('stratum_5', models.TextField()),
                ('count_value', models.BigIntegerField()),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uploader.DataSource')),
                ('upload_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uploader.UploadHistory')),
            ],
            options={
                'db_table': 'achilles_results_archive',
            },
        ),
        migrations.CreateModel(
            name='AchillesResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_id', models.BigIntegerField()),
                ('stratum_1', models.TextField()),
                ('stratum_2', models.TextField()),
                ('stratum_3', models.TextField()),
                ('stratum_4', models.TextField()),
                ('stratum_5', models.TextField()),
                ('count_value', models.BigIntegerField()),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uploader.DataSource')),
            ],
            options={
                'db_table': 'achilles_results',
            },
        ),
        migrations.AddIndex(
            model_name='achillesresultsarchive',
            index=models.Index(fields=['data_source'], name='achilles_re_data_so_4baf12_idx'),
        ),
        migrations.AddIndex(
            model_name='achillesresultsarchive',
            index=models.Index(fields=['analysis_id'], name='achilles_re_analysi_98b026_idx'),
        ),
        migrations.AddIndex(
            model_name='achillesresults',
            index=models.Index(fields=['data_source'], name='achilles_re_data_so_cc95c9_idx'),
        ),
        migrations.AddIndex(
            model_name='achillesresults',
            index=models.Index(fields=['analysis_id'], name='achilles_re_analysi_873019_idx'),
        ),
        migrations.RunPython(insert_cities_data),
    ]
