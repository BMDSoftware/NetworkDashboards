# reference
# - https://github.com/amancevice/docker-superset/blob/master/examples/postgres/docker-compose.yml

version: '3'
services:
  redis:
    image: redis
    restart: always
    volumes:
      - redis:/data
    networks:
      - backbone
      - all

  postgres:
    image: postgres:10
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres-entrypoint:/docker-entrypoint-initdb.d
    networks:
      - backbone
      - all
    environment:
      POSTGRES_USER: "${POSTGRES_ROOT_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_ROOT_PASSWORD}"
      # Variables below are used to iniliaze databases for the
      #  services below (superset and dashboard_viewer).
      POSTGRES_DBS: "${POSTGRES_SUPERSET_DB} ${POSTGRES_DASHBOARD_VIEWER_DB}"
      POSTGRES_DBS_USERS: "${POSTGRES_SUPERSET_USER} ${POSTGRES_DASHBOARD_VIEWER_USER}"
      POSTGRES_DBS_PASSWORDS: "${POSTGRES_SUPERSET_PASSWORD} ${POSTGRES_DASHBOARD_VIEWER_PASSWORD}"

  nginx:
    build: ./nginx
    command: "sh setupURL.sh"
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - superset
    networks:
      - backbone
      - all
    environment:
      BASE: "${NGINX_BASE}"
      SUFFIX: "${NGINX_SUFFIX}"

  superset:
    build:
      context: ../superset
      dockerfile: contrib/docker/Dockerfile
    restart: unless-stopped
    user: root:root
    ports:
     - "${SUPERSET_PORT}:8088"
    depends_on:
      - postgres
      - redis
    networks:
      - backbone
      - all
    volumes:
      - ./superset_config.py:/home/superset/superset/superset_config.py
    expose:
      - 8088
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USER: "${POSTGRES_SUPERSET_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_SUPERSET_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_SUPERSET_DB}"
      REDIS_HOST: redis
      REDIS_PORT: "${REDIS_PORT}"
      SUPERSET_ENV: "${INSTALLATION_ENV}"
      BASE: "${NGINX_BASE}"
      SUFFIX: "${NGINX_SUFFIX}"

  dashboardviewer:
    build:
      context: ../dashboard_viewer
    restart: unless-stopped
    volumes:
      - ../dashboard_viewer:/app
    ports:
      - "${DASHBOARD_VIEWER_PORT}:8000"
    depends_on:
      - postgres
    networks:
      - backbone
      - all
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USER: "${POSTGRES_DASHBOARD_VIEWER_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_DASHBOARD_VIEWER_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DASHBOARD_VIEWER_DB}"
      DASHBOARD_VIEWER_ENV: "${INSTALLATION_ENV}"

volumes:
  postgres:
    external: false
  redis:
    external: false

networks:
  backbone:
    driver: bridge
  all:
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/16